{"ast":null,"code":"var _jsxFileName = \"D:\\\\GoMyCode\\\\2eme\\\\website_sac_indu-main\\\\website_sac_indu-main\\\\front\\\\src\\\\components\\\\GridCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridCard = el => {\n  _s();\n  const [dataUrl, setDataUrl] = useState(\"\");\n  const imgfolder = \"http://localhost:5000/images/\";\n  useEffect(() => {\n    // Convert the binary data to a base64 data URL\n    const binaryData = new Uint8Array(el.image.data.data);\n    console.log(el.image.data.data);\n    console.log(binaryData);\n    const base64Data = btoa(String.fromCharCode.apply(null, binaryData));\n    //const dataUrl = `data:${el.image.contentType};base64,${base64Data}`;\n    const decodedData = atob(base64Data);\n    setDataUrl(decodedData);\n  }, [el.image]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"300px\",\n      height: \"250px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: \"40px\",\n      backgroundColor: \"white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"thin solid\",\n        borderColor: \"#f7f7f7\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: 100\n        },\n        src: imgfolder + dataUrl,\n        alt: \"sacem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginBottom: \"15px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: el.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(GridCard, \"wwwJSwEX0VtN6z3gLh4HOIL2xHQ=\");\n_c = GridCard;\nexport default GridCard;\nvar _c;\n$RefreshReg$(_c, \"GridCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GridCard","el","_s","dataUrl","setDataUrl","imgfolder","binaryData","Uint8Array","image","data","console","log","base64Data","btoa","String","fromCharCode","apply","decodedData","atob","style","width","height","display","flexDirection","margin","backgroundColor","children","border","borderColor","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","title","_c","$RefreshReg$"],"sources":["D:/GoMyCode/2eme/website_sac_indu-main/website_sac_indu-main/front/src/components/GridCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst GridCard = (el) => {\r\n  const [dataUrl, setDataUrl] = useState(\"\");\r\n  const imgfolder = \"http://localhost:5000/images/\";\r\n  useEffect(() => {\r\n    // Convert the binary data to a base64 data URL\r\n    const binaryData = new Uint8Array(el.image.data.data);\r\n    console.log(el.image.data.data);\r\n    console.log(binaryData);\r\n    const base64Data = btoa(String.fromCharCode.apply(null, binaryData));\r\n    //const dataUrl = `data:${el.image.contentType};base64,${base64Data}`;\r\n    const decodedData = atob(base64Data);\r\n    setDataUrl(decodedData);\r\n  }, [el.image]);\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"300px\",\r\n        height: \"250px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        margin: \"40px\",\r\n        backgroundColor: \"white\",\r\n      }}\r\n    >\r\n      <div style={{ border: \"thin solid\", borderColor: \"#f7f7f7\" }}>\r\n        <img style={{ width: 100 }} src={imgfolder + dataUrl} alt=\"sacem\" />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            marginBottom: \"15px\",\r\n          }}\r\n        >\r\n          <p>{el.title}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAIC,EAAE,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMQ,SAAS,GAAG,+BAA+B;EACjDT,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,UAAU,GAAG,IAAIC,UAAU,CAACN,EAAE,CAACO,KAAK,CAACC,IAAI,CAACA,IAAI,CAAC;IACrDC,OAAO,CAACC,GAAG,CAACV,EAAE,CAACO,KAAK,CAACC,IAAI,CAACA,IAAI,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAACL,UAAU,CAAC;IACvB,MAAMM,UAAU,GAAGC,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAEV,UAAU,CAAC,CAAC;IACpE;IACA,MAAMW,WAAW,GAAGC,IAAI,CAACN,UAAU,CAAC;IACpCR,UAAU,CAACa,WAAW,CAAC;EACzB,CAAC,EAAE,CAAChB,EAAE,CAACO,KAAK,CAAC,CAAC;EACd,oBACET,OAAA;IACEoB,KAAK,EAAE;MACLC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,MAAM,EAAE,MAAM;MACdC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,eAEF3B,OAAA;MAAKoB,KAAK,EAAE;QAAEQ,MAAM,EAAE,YAAY;QAAEC,WAAW,EAAE;MAAU,CAAE;MAAAF,QAAA,gBAC3D3B,OAAA;QAAKoB,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAI,CAAE;QAACS,GAAG,EAAExB,SAAS,GAAGF,OAAQ;QAAC2B,GAAG,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpEnC,OAAA;QACEoB,KAAK,EAAE;UACLG,OAAO,EAAE,MAAM;UACfa,YAAY,EAAE;QAChB,CAAE;QAAAT,QAAA,eAEF3B,OAAA;UAAA2B,QAAA,EAAIzB,EAAE,CAACmC;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CArCIF,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}